name: Build

on:
  pull_request:
    types:
      - closed
    branches:
      - build

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - os: ubuntu-latest
          arch: x86_64
          rust_target: x86_64-unknown-linux-gnu
        - os: macos-latest
          arch: x86_64
          rust_target: x86_64-apple-darwin
        - os: macos-latest
          arch: aarch64
          rust_target: aarch64-apple-darwin
        - os: windows-latest
          arch: x86_64
          rust_target: x86_64-pc-windows-msvc

    steps:
      # Checkout
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
        fetch-depth: '5'

    # Bump version and push tag
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
      
    # Setups and installs dependencies
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.config.rust_target }}

    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.config.rust_target }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '19.x'
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 6.0.2
      
    - name: Install dependencies
      run: pnpm install
      
    - name: Install dependencies (Ubuntu)
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Build binaries
      run:  pnpm tauri build
      
    # Extract and upload artifacts to create release
    - name: Create release for AppImage
      uses: ncipollo/release-action@v1.12.0
      if: matrix.config.os == 'ubuntu-latest'
      with:
        name: Tally-${{ steps.tag_version.outputs.new_version }}-linux-${{ matrix.config.arch }}.AppImage
        artifacts: src-tauri/target/release/bundle/appimage/*.AppImage
        allowUpdates: true

    - name: Create release for deb
      uses: ncipollo/release-action@v1.12.0
      if: matrix.config.os == 'ubuntu-latest'
      with:
        name: Tally-${{ steps.tag_version.outputs.new_version }}-linux-${{ matrix.config.arch }}.deb
        artifacts: src-tauri/target/release/bundle/deb/*.deb
        allowUpdates: true

    - name: Create release for dmg
      uses: ncipollo/release-action@v1.12.0
      if: matrix.config.os == 'macos-latest'
      with:
        name: Tally-${{ steps.tag_version.outputs.new_version }}-macos-${{ matrix.config.arch }}.dmg
        artifacts: src-tauri/target/release/bundle/dmg/*.dmg
        allowUpdates: true
      
    - name: Create release for app
      uses: ncipollo/release-action@v1.12.0
      if: matrix.config.os == 'macos-latest'
      with:
        name: Tally-${{ steps.tag_version.outputs.new_version }}-macos-${{ matrix.config.arch }}.app
        artifacts: src-tauri/target/release/bundle/macos/*.app
        allowUpdates: true

    - name: Create release for msi
      uses: ncipollo/release-action@v1.12.0
      if: matrix.config.os == 'windows-latest'
      with:
        name: Tally-${{ steps.tag_version.outputs.new_version }}-windows-${{ matrix.config.arch }}.msi
        artifacts: src-tauri/target/release/bundle/msi/*.msi
        allowUpdates: true